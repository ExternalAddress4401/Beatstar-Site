/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

interface ArrowProps {
  x: number;
  y: number;
  z: number;
  offset: number;
  color: string;
  swipe: string;
}

const rotations = {
  u: [0, Math.PI / 2, 0],
  d: [0, -Math.PI / 2, 0],
  l: [0, Math.PI, 0],
  r: [0, 0, 0],
};

export function Arrow({ x, y, z, offset, color, swipe }: ArrowProps) {
  if (offset) {
    z += offset - 11;
  }
  const { nodes, materials } = useGLTF("/models/arrow.glb");
  return (
    <group dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials.Material}
        rotation={rotations[swipe]}
        scale={[4, 0.1, 4]}
        position={[x, y, z]}
      >
        <meshStandardMaterial color={color} />
      </mesh>
    </group>
  );
}

useGLTF.preload("/models/arrow.glb");
